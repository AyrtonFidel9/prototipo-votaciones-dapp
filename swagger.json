{
    "openapi": "3.0.0",
    "info": {
      "title": "DAPP Votaciones - OpenAPI 3.0",
      "description": "API creada para el control de votaciones de la COAC ",
      "termsOfService": "http://swagger.io/terms/",
      "contact": {
        "email": "apiteam@dapp.com"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      },
      "version": "1.0.1"
    },
    "servers": [
      {
        "url": "https://api.dapp.com/v1/"
      }
    ],
    "tags": [
      {
        "name": "cuentas",
        "description": "Todo sobre las cuentas"
      },
      {
        "name": "usuarios",
        "description": "Todo sobre los cuentas"
      },
      {
        "name": "user",
        "description": "Operations about user"
      }
    ],
    "paths": {
      "/cuentas": {
        "put": {
          "tags": [
            "cuentas"
          ],
          "summary": "Actualizar una cuenta",
          "description": "Actualizar una cuenta existente por Id",
          "operationId": "updateCuenta",
          "requestBody": {
            "description": "Actualizar una cuenta existente en la BD",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cuentas"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/cuentas"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Operacion correctamnete",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/cuentas"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/cuentas"
                  }
                }
              }
            },
            "400": {
              "description": "ID no valido"
            },
            "404": {
              "description": "Cuenta no encontrada"
            },
            "405": {
              "description": "Error en la validacion"
            }
          }
        },
        "post": {
          "tags": [
            "cuentas"
          ],
          "summary": "Agregar una nueva cuenta",
          "description": "Agregar una nueva cuenta",
          "operationId": "addCuenta",
          "requestBody": {
            "description": "Crear una cuenta en la BD",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cuentas"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/cuentas"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Operacion correcta",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/cuentas"
                  }
                }
              }
            },
            "405": {
              "description": "Datos invalidos"
            }
          }
        }
      },
      "/cuentas/{id}": {
        "get": {
          "tags": [
            "cuentas"
          ],
          "summary": "Buscar cuentas por ID",
          "description": "Retorna una cuenta",
          "operationId": "getCuentaById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID de la cuenta",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/cuentas"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/cuentas"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid ID supplied"
            },
            "404": {
              "description": "Pet not found"
            }
          }
        },
        "post": {
          "tags": [
            "cuentas"
          ],
          "summary": "Actualizar nombre de usuario de una cuenta",
          "description": "",
          "operationId": "updateCuentaWithForm",
          "parameters": [
            {
              "name": "Id",
              "in": "path",
              "description": "Id de la cuenta a ser actualizada",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            },
            {
              "name": "nameUser",
              "in": "query",
              "description": "Nombre de usuario a ser actualizado",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "405": {
              "description": "Invalid input"
            }
          },
          "security": null
        },
        "delete": {
          "tags": [
            "cuentas"
          ],
          "summary": "Borrar una cuenta",
          "description": "Borrar una cuenta",
          "operationId": "deleteCuenta",
          "parameters": [
            {
              "name": "jwt",
              "in": "header",
              "description": "",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "in": "path",
              "description": "Pet id to delete",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Id no valido"
            }
          }
        }
      },
      "/usuarios/login": {
        "post": {
          "tags": [
            "usuarios"
          ],
          "summary": "Iniciar sesion un usuario en el sistema",
          "description": "",
          "operationId": "loginUsuario",
          "parameters": [
            {
              "name": "username",
              "in": "query",
              "description": "El nombre de usuario para el login",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "password",
              "in": "query",
              "description": "La contrasen√±a del usuario",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "headers": {
                "X-Rate-Limit": {
                  "description": "calls per hour allowed by the user",
                  "schema": {
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "X-Expires-After": {
                  "description": "date in UTC when token expires",
                  "schema": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "example": "Inicio de sesion correcto"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid username/password supplied"
            }
          }
        }
      },
      "/user/logout": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Logs out current logged in user session",
          "description": "",
          "operationId": "logoutUser",
          "parameters": [],
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        }
      },
      "/user/{username}": {
        "get": {
          "tags": [
            "user"
          ],
          "summary": "Get user by user name",
          "description": "",
          "operationId": "getUserByName",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be fetched. Use user1 for testing. ",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "application/xml": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            },
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        },
        "put": {
          "tags": [
            "usarios"
          ],
          "summary": "Update user",
          "description": "This can only be done by the logged in user.",
          "operationId": "updateUser",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "name that need to be deleted",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "description": "Update an existent user in the store",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/x-www-form-urlencoded": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "responses": {
            "default": {
              "description": "successful operation"
            }
          }
        },
        "delete": {
          "tags": [
            "user"
          ],
          "summary": "Delete user",
          "description": "This can only be done by the logged in user.",
          "operationId": "deleteUser",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "description": "The name that needs to be deleted",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "400": {
              "description": "Invalid username supplied"
            },
            "404": {
              "description": "User not found"
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "cuentas": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            },
            "nombres": {
              "type": "string",
              "description": "Nombres del propietario de una cuenta",
              "example": "Fidel Ayrton"
            },
            "apellidos": {
              "type": "string",
              "description": "Apellidos del propietario de una cuenta",
              "example": "Avalos Cuadrado"
            },
            "createAt": {
              "type": "string",
              "format": "date-time"
            },
            "status": {
              "type": "string",
              "description": "Estado de la cuenta",
              "example": "habilitado",
              "enum": [
                "habilitado",
                "inavilitado"
              ]
            },
            "complete": {
              "type": "boolean"
            }
          }
        },
        "Address": {
          "type": "object",
          "properties": {
            "street": {
              "type": "string",
              "example": "437 Lytton"
            },
            "city": {
              "type": "string",
              "example": "Palo Alto"
            },
            "state": {
              "type": "string",
              "example": "CA"
            },
            "zip": {
              "type": "string",
              "example": "94301"
            }
          }
        },
        
        "User": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64",
              "example": 10
            },
            "username": {
              "type": "string",
              "example": "theUser"
            },
            "firstName": {
              "type": "string",
              "example": "John"
            },
            "lastName": {
              "type": "string",
              "example": "James"
            },
            "email": {
              "type": "string",
              "example": "john@email.com"
            },
            "password": {
              "type": "string",
              "example": "12345"
            },
            "phone": {
              "type": "string",
              "example": "12345"
            },
            "userStatus": {
              "type": "integer",
              "description": "User Status",
              "format": "int32",
              "example": 1
            }
          }
        }
      }
    }
  }