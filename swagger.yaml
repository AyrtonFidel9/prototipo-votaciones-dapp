openapi: 3.0.0
info:
  title: DAPP Votaciones - OpenAPI 3.0
  description: 'API creada para el control de votaciones de la COAC '
  termsOfService: http://swagger.io/terms/
  contact:
    email: ayrtonfidel9@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.1
schemes:
  - http
  - https
servers:
  - url: http://localhost:8080/api/v1
tags:
  - name: cuentas
    description: Todo sobre las cuentas
  - name: usuarios
    description: Todo sobre los cuentas
  - name: socios
    description: Operaciones para socios
  - name: agencias
    description: Operaciones para agencias
  - name: notificacion
    description: Operaciones para notificaciones
  - name: recuperacion
    description: Operaciones para procesos de recuperación de contraseña
  - name: elecciones
    description: Operaciones para elecciones
  - name: representantes
    description: Operaciones para representantes/listas
  - name: votaciones
    description: Operaciones para el proceso de votaciones
  - name: inscripciones
    description: Operaciones para el proceso de inscripciones
paths:
  /notificacion/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - notificacion
      summary: Buscar una notificacion por ID
      description: Retorna la informacion de la notificacion
      operationId: CU-16
      parameters:
        - name: id
          in: path
          description: ID de la notificacion
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacion'
        '400':
          description: Invalid ID supplied
        '404':
          description: No existe la notificacion
    put:
      security:
        - BearerAuth: []
      tags:
        - notificacion
      summary: Buscar cuentas por ID del socio
      description: Retorna una cuenta
      operationId: CU-15
      parameters:
        - name: id
          in: path
          description: ID de la notificacion
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Campos para ingresar una notificacion
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notificacion'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacion'
        '400':
          description: Invalid ID supplied
        '404':
          description: No existe la notificacion
  /notificacion/ingresar/{idSocio}:
    post:
      security:
        - BearerAuth: []
      tags:
        - notificacion
      summary: Ingresar una notificacion
      description: Ingresa una noticiacion
      operationId: CU-14
      parameters:
        - name: idSocio
          in: path
          description: ID del socio
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: 'Registrar una notificacion en formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notificacion'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notificacion'
        '400':
          description: Invalid ID supplied
        '404':
          description: No existe la notificacion
  /cuentas/findById/{id}:
    get:
      security:
        - BearerAuth: []
      tags:
        - cuentas
      summary: Buscar cuentas por ID de cuenta
      description: Retorna una cuenta
      operationId: CU-ND-005¿6
      parameters:
        - name: id
          in: path
          description: ID de la cuenta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cuentas'
        '400':
          description: Invalid ID supplied
        '404':
          description: No existe una cuenta para el socio
  /cuentas/{idSocio}:
    get:
      security:
        - BearerAuth: []
      tags:
        - cuentas
      summary: Buscar cuentas por ID del socio
      description: Retorna una cuenta
      operationId: CU-10
      parameters:
        - name: idSocio
          in: path
          description: ID del socio propietario de la cuenta
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cuentas'
        '400':
          description: Invalid ID supplied
        '404':
          description: No existe una cuenta para el socio
    put:
      security:
        - BearerAuth: []
      tags:
        - cuentas
      summary: Actualizar la cuenta de un usuario
      description: ''
      operationId: CU-12
      parameters:
        - name: idSocio
          in: path
          description: ID del socio propietario de la cuenta
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cuentas'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cuentas'
        '400':
          description: Invalid ID supplied
        '404':
          description: No existe una cuenta para el socio
  /cuentas/reboot/{idSocio}:
    put:
      tags:
        - cuentas
      summary: Actualizar contraseña de un usuario
      description: ''
      operationId: CU-ND-004
      parameters:
        - name: idSocio
          in: path
          description: ID del socio propietario de la cuenta
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              properties:
                newPassoword:
                  type: string
                  description: Contraseña del propietario de una cuenta
                  example: 123123
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cuentas'
        '400':
          description: Invalid ID supplied
        '404':
          description: No existe una cuenta para el socio
  /iniciar-sesion:
    post:
      tags:
        - usuarios
      summary: Iniciar sesion un usuario en el sistema
      description: ''
      operationId: CU-11
      requestBody:
        description: Campos para iniciar sesión en la aplicación
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InicioSesion'
      responses:
        '200':
          description: inicio de sesión correcto, token generado
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the cuenta
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: >-
                      ejhbGciOiJIUzzz1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwicm9sIjoiUk9MRV9BRE1JTiIsInVzdWFyaW8iOiJKYW5lOTIiLCJpYXQiOjE2Njk4NDg3NTAsImV4cCI6MTY2zzg2MzE1MH0.8a-Sz2SBKNDHDYkS0DXLKAizzeP_YaL31KfvwneyzN8
        '401':
          description: Contraseña incorrecta
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La contraseña proporcionada es incorrecta
        '404':
          description: Usuario no válido, no existente en la base de datos
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El Usuario proporcionado es incorrecto
  /socios:
    get:
      security:
        - BearerAuth: []
      tags:
        - socios
      summary: 'Traer todos los socios'
      description: 'Endpoint para traer todos los socios de la base de datos, tabla SOCIOS'
      operationId: CU-ND-005
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /socios/innerjoin/cuentas:
    get:
      security:
        - BearerAuth: []
      tags:
        - socios
      summary: 'Traer todos los socios'
      description: 'Endpoint para traer todos los socios Y SUS CUENTAS de la base de datos, tabla SOCIOS'
      operationId: CU-ND-012
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /socios/registrar:
    post:
      security:
        - BearerAuth: []
      tags:
        - socios
      summary: Registrar un socio de forma individual
      description: 'Registrar un socio individualmente en la base de datos'
      operationId: CU-05
      requestBody:
        description: 'Ingresar un socio'
        content:
          multipart/form-data:
            description: 'Ingresar datos de un socio'
            required: true
            schema:
              $ref: '#/components/schemas/Socios'
      responses:
        '200':
          description: Socio agregado correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /socios/{idSocio}:
    get:
      security:
        - BearerAuth: []
      tags:
        - socios
      summary: 'Buscar un socio por id'
      description: 'Endpoint para buscar una socio por id en la base de datos, tabla SOCIOS'
      operationId: CU-07
      parameters:
        - in: path
          name: idSocio
          schema:
            type: integer
          required:
          description: El ID del socio debe ser un valor numerico para poder ejecutar la búsqueda correctamente
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /socios/existbyPhone/{number}:
    get:
      tags:
        - socios
      summary: 'Verificar la existencia del socio por su numero celular'
      description: 'Endpoint para verificar la existencia del socio, tabla SOCIOS'
      operationId: CU-ND-001
      parameters:
        - in: path
          name: number
          schema:
            type: string
          required:
          description: El numero del socio debe ser un valor numerico para poder ejecutar la búsqueda correctamente
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /socios/update/{idSocio}:
    put:
      security:
        - BearerAuth: []
      tags:
        - socios
      summary: 'Actualizar los campos de un socio'
      description: 'Endpoint para actualizar los datos de un socio por el ID, tabla SOCIOS'
      operationId: CU-06
      parameters:
        - in: path
          name: idSocio
          schema:
            type: integer
          required: true
          description: El id debe ser un valor numerico, para  actualizar los datos correctamente
      requestBody:
        description: 'Aztualizar los datos de un socio'
        content:
          multipart/form-data:
            description: 'Ingresar datos de un socio'
            required: true
            schema:
              $ref: '#/components/schemas/Socios'
      responses:
        '200':
          description: Socio actualizado correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /socios/delete/{idSocio}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - socios
      summary: 'Eliminar un socio por ID'
      description: 'Endpoint para eliminar un socio de la tabla SOCIOS'
      operationId: CU-08
      parameters: 
        - in: path
          name: idSocio
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico para eliminar de forma satisfactoria los datos del socio
      responses:
        '200':
          description: Datos eliminados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - usarios
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /agencia/registrar:
    post:
      security:
        - BearerAuth: [] 
      tags:
        - agencias
      summary: 'Ingresar una agencia'
      description: 'Endpoint para ingresar una agencia en el sistema'
      operationId: CU-01
      requestBody:
        description: 'Registrar una agencia formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agencia' 
      responses:
        '200':
          description: Agencia agregada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /agencia:
    get:
      security:
        - BearerAuth: []
      tags:
        - agencias
      summary: 'Buscar todas las agencias'
      description: 'Endpoint para buscar todas las agencias de la base de datos, tabla AGENCIA'
      operationId: CU-ND-006
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /agencia/{agenciaId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - agencias
      summary: 'Buscar una agencia por id'
      description: 'Endpoint para buscar una agencia por id en la base de datos, tabla AGENCIA'
      operationId: CU-02
      parameters:
        - in: path
          name: agenciaId
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /agencia/delete/{agenciaId}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - agencias
      summary: 'Eliminar una agencia por id'
      description: 'Endpoint para eliminar una agencia por id en la base de datos, tabla AGENCIA'
      operationId: CU-03
      parameters:
        - in: path
          name: agenciaId
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos eliminados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /agencia/update/{agenciaId}:
    put:
      security:
        - BearerAuth: []
      tags:
        - agencias
      summary: 'Actualizar una agencia por ID'
      description: 'Endpoint para actualizar una agencia por id en la base de datos, tabla AGENCIA'
      operationId: CU-04
      parameters:
        - in: path
          name: agenciaId
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      requestBody:
        description: 'Actualizar una agencia formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agencia' 
      responses:
        '200':
          description: Agencia actualizada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /recuperacion/ingresar/{number}:
    post:
      tags:
        - recuperacion
      summary: 'Caso de uso para generar un codigo de recuperacion para el socio'
      description: 'Endpoint para generar y guardar el codigo de recuperacion en la tabla Recuperacion'
      operationId: CU-ND-002
      parameters:
        - in: path
          name: number
          schema:
            type: string
          required:
          description: El numero del socio debe ser un valor numerico para poder ejecutar la recuperacion correctamente
      responses:
        '200':
          description: Codigo de recuperacion generado correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /recuperacion/actualizarEstado/{codigo}:
    put:
      tags:
        - recuperacion
      summary: 'Caso de uso para actualizar el estado del codigo de recuperacion para el socio'
      description: 'Endpoint para Caso de uso para actualizar el estado del codigo de recuperacion en la tabla Recuperacion'
      operationId: CU-ND-003
      parameters:
        - in: path
          name: codigo
          schema:
            type: string
          required:
          description: El codigo debe ser una cadena
      responses:
        '200':
          description: Actualizacion satisfactoria
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /elecciones/registrar:
    post:
      security:
        - BearerAuth: [] 
      tags:
        - elecciones
      summary: 'Ingresar una eleccion'
      description: 'Endpoint para ingresar una eleccion en el sistema'
      requestBody:
        description: 'Registrar una eleccion formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Eleccion' 
      responses:
        '200':
          description: Eleccion agregada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /elecciones:
    get:
      security:
        - BearerAuth: []
      tags:
        - elecciones
      summary: 'Buscar todas las elecciones'
      description: 'Endpoint para buscar todas las elecciones de la base de datos, tabla elecciones'
      operationId: CU-ND-007
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /elecciones/{idEleccion}:
    get:
      security:
        - BearerAuth: []
      tags:
        - elecciones
      summary: 'Buscar una eleccion por ID de la eleccion'
      description: 'Endpoint para buscar una eleccion de la base de datos, tabla elecciones'
      operationId: CU-17
      parameters:
        - in: path
          name: idEleccion
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /elecciones/delete/{idEleccion}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - elecciones
      summary: 'Eliminar una eleccion por id'
      description: 'Endpoint para eliminar una eleccion por id en la base de datos, tabla ELECCIONES'
      operationId: CU-18
      parameters:
        - in: path
          name: idEleccion
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos eliminados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /elecciones/update/{idEleccion}:
    put:
      security:
        - BearerAuth: []
      tags:
        - elecciones
      summary: 'Actualizar una eleccion por ID'
      description: 'Endpoint para actualizar una eleccion por id en la base de datos, tabla AGENCIA'
      operationId: CU-04
      parameters:
        - in: path
          name: idEleccion
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      requestBody:
        description: 'Actualizar una agencia formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Eleccion' 
      responses:
        '200':
          description: Agencia actualizada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /representantes:
    get:
      security:
        - BearerAuth: []
      tags:
        - representantes
      summary: 'Buscar todos los representantes'
      description: 'Endpoint para buscar todos los representantes de la base de datos, tabla representantes'
      operationId: CU-ND-008
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /representantes/registrar:
    post:
      security:
        - BearerAuth: [] 
      tags:
        - representantes
      summary: 'Ingresar un representante/lista'
      description: 'Endpoint para ingresar un representante para la elecciones'
      requestBody:
        description: 'Registrar un representante formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Representante' 
      responses:
        '200':
          description: Eleccion agregada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /representantes/{idRepresentante}:
    get:
      security:
        - BearerAuth: []
      tags:
        - representantes
      summary: 'Buscar un representante por id'
      description: 'Endpoint para buscar un representante por id en la base de datos, tabla AGENCIA'
      operationId: CU-ND-009
      parameters:
        - in: path
          name: idRepresentante
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /representantes/delete/{idRepresentante}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - representantes
      summary: 'Eliminar un representante por id'
      description: 'Endpoint para eliminar un representate por id en la base de datos, tabla REPRESENTANTES'
      operationId: CU-ND-010
      parameters:
        - in: path
          name: idRepresentante
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos eliminados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /representantes/update/{idRepresentante}:
    put:
      security:
        - BearerAuth: []
      tags:
        - representantes
      summary: 'Actualizar un representante por ID'
      description: 'Endpoint para actualizar un representante por id en la base de datos, tabla REPRESENTANTES'
      operationId: CU-ND-011
      parameters:
        - in: path
          name: idRepresentante
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      requestBody:
        description: 'Actualizar una agencia formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Representante' 
      responses:
        '200':
          description: Agencia actualizada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /votaciones/enviar-voto:
    post:
      tags:
        - votaciones
      summary: 'Enviar voto'
      description: 'Endpoint para votar por un representante en una eleccion'
      requestBody:
        description: 'Registrar un representate formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Votacion' 
      responses:
        '200':
          description: Voto enviado correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'


  /inscripciones/registrar:
    post:
      security:
        - BearerAuth: [] 
      tags:
        - inscripciones
      summary: 'Ingresar una inscripcion'
      description: 'Endpoint para ingresar una inscripcion en el sistema'
      requestBody:
        description: 'Registrar una inscripcion formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inscripcion' 
      responses:
        '200':
          description: inscripcion agregada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'
  /inscripciones:
    get:
      security:
        - BearerAuth: []
      tags:
        - inscripciones
      summary: 'Buscar todas las inscripciones'
      description: 'Endpoint para buscar todas las inscripciones de la base de datos, tabla inscripciones'
      operationId: CU-ND-007
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /inscripciones/{idInscripcion}:
    get:
      security:
        - BearerAuth: []
      tags:
        - inscripciones
      summary: 'Buscar una inscripcion por ID de la inscripcion'
      description: 'Endpoint para buscar una inscripcion de la base de datos, tabla inscripciones'
      operationId: CU-17
      parameters:
        - in: path
          name: idInscripcion
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos encontrados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /inscripciones/delete/{idInscripcion}:
    delete:
      security:
        - BearerAuth: []
      tags:
        - inscripciones
      summary: 'Eliminar una inscripcion por id'
      description: 'Endpoint para eliminar una inscripcion por id en la base de datos, tabla inscripcionES'
      operationId: CU-18
      parameters:
        - in: path
          name: idInscripcion
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      responses:
        '200':
          description: Datos eliminados correctamente
        '400':
          description: Operacion no autorizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unauthorized'
        '404':
          description: Datos no encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /inscripciones/update/{idInscripcion}:
    put:
      security:
        - BearerAuth: []
      tags:
        - inscripciones
      summary: 'Actualizar una inscripcion por ID'
      description: 'Endpoint para actualizar una inscripcion por id en la base de datos, tabla AGENCIA'
      operationId: CU-04
      parameters:
        - in: path
          name: idInscripcion
          schema:
            type: integer
          required: true
          description: El ID debe ser un valor numérico
      requestBody:
        description: 'Actualizar una agencia formato JSON'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Inscripcion' 
      responses:
        '200':
          description: Agencia actualizada correctamente
        '401':
          $ref: '#/components/schemas/Unauthorized'


components:
  schemas:
    InicioSesion:
      type: object
      properties:
        usuario:
          type: string
          description: Cadena del nombre usuario del socio
          example: Jane96
        password:
          type: string
          description: Campo para la contraseña de la cuenta
          example: '12345'
    cuentas:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        usuario:
          type: string
          description: Nombre de usuario del propietario de una cuenta
          example: AyrtonFidel1290
        password:
          type: string
          description: Contraseña del propietario de una cuenta
          example: 123123
        rol:
          type: string
          example: 'ROLE_SOCIO'
        ipCliente:
          type: string
          description: DIRECCION IP DEL CLIENTE
          example: '172.12.54.1'
        ultimoAcceso:
          type: string
          format: date-time
          example: '2022-06-01 15:30:02'
    Address:
      type: object
      properties:
        street:
          type: string
          example: 437 Lytton
        city:
          type: string
          example: Palo Alto
        state:
          type: string
          example: CA
        zip:
          type: string
          example: '94301'
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
    Agencia:
      type: object
      properties:
        nombre:
          type: string
          example: San Andrés
        ubicacion:
          type: string
          example: Cesar Naveda y Chiriboga
        representantes: 
          type: integer
          example: 10
        ganadores: 
          type: integer
          example: 5
    Notificacion:
      type: object
      properties:
        fecha:
          type: string
          format: date
          example: '2022-12-01'
        hora:
          type: string
          format: time
          example: '15:30'
        msg: 
          type: integer
          example: 'Cambiar la contraseña'
        estado: 
          type: boolean
          example: false
        grado: 
          type: string
          example: 1
        idCliente:
          type: integer
          example: 1
    Socios:
      type: object
      properties:
        nombres:
          type: string
          example: Jose Luis
        apellidos:
          type: string
          example: Almeida Ramirez
        cedula:
          type: string,
          example: '0606252138'
        codigo:
          type: integer
          example: 1091
        imagen:
          type: string
          format: binary
        estado:
          type: boolean
          example: true
        email:
          type: string
          example: joselui@mail.com
        celular:
          type: string
          example: '0981509821'
        idAgencia:
          type: integer
          example: 1
    Eleccion:
      type: object
      properties:
        nombre:
          type: string
          example: Eleccion numero 1
        dia:
          type: string
          example: "2022-12-28"
        hora:
          type: string,
          example: "18:02:51"
        duracion:
          type: integer
          example: 8
        estado:
          type: string
          example: 'NO-INICIADO'
        idAgencia:
          type: integer
          example: 1
    Representante:
      type: object
      properties:
        principal:
          type: integer
          example: 1234
        psuplente:
          type: integer
          example: 1231
        ssuplente:
          type: integer,
          example: 1233
        ethCantVot:
          type: integer
          example: 8
        idInscripcion:
          type: string
          example: 1
        idElecciones:
          type: integer
          example: 1
    Votacion:
      type: object
      properties:
        idEleccion:
          type: integer
          example: 1
        walletRep:
          type: string
          example: '0x03213213213sadsa'
    Inscripcion:
      type: object
      properties:
        idInscripcion:
          type: integer
          example: 1
        formulario:
          type: string
          example: 'Formulario0001.pdf'
        declaracion:
          type: string
          example: 'declaracion0001.pdf'
        estado:
          type: string
          example: 'online'
    Error:
      type: object
      properties:
        message:
          type: string
          example: Un error a ocurrido en la base de datos
    NotFound:
      type: object
      properties:
        message:
          type: string
          example: Recurso no encontrado en la base de datos
    Unauthorized:
      type: object
      properties:
        message:
          type: string
          example: Su rol le impide realizar la presente operación
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  security: [
    {
      "Bearer": []
    },
    {
      "BasicAuth": []
    }
  ]
